# /data/db/metadata_jav_settings.yaml

# JAV 메타데이터/파일처리 고급 설정
# 이 파일에서 파싱 규칙 등 다양한 설정을 관리할 수 있습니다.
# #으로 시작하는 줄은 주석으로 처리되어 무시됩니다.

# -------------------------------------------------------------------
# [필수] JAV 파일명 파싱 규칙
# -------------------------------------------------------------------
# 이 규칙들은 파일처리/메타데이터에서 품번을 파싱하기 위해 사용됩니다.
# 각 섹션의 패턴(정규표현식)과 매칭 규칙은 위에서부터 순서대로 시도됩니다.

# 캡쳐 그룹의 개수나 문자/숫자 조합 등의 제한은 없지만, 반드시 파이프(|)로 구분된 2개의 파트로 나뉘어야 합니다.
# 캡쳐 그룹의 인덱스는 {0}부터 시작합니다.
# 형식: 정규식 패턴 => 레이블 네임|넘버 파트
# 예시 (HEYZO): .*?(heyzo)[-_\s]?(\d{4}) => {0}|{1}
# - 위 규칙은 heyzo 2681, heyzo-2681 같은 품번을 레이블: HEYZO, 숫자: 2681로 파싱합니다.
jav_parsing_rules:
  # 범용 규칙 (모든 모드에서 특수 규칙보다 나중에 시도됨)
  # 특수 규칙에 해당되지 않는 일반적인 품번 형태(Fallback)
  generic_rules:
    - '.*?\d*([a-z]+)-(\d+)(?=[^\d]|\b) => {0}|{1}'
    - '.*?\b([0-9a-z]+)-(\d+)(?=[^\d]|\b) => {0}|{1}'
    - '.*?\d*([a-z]+)-?(\d+)(?=[^\d]|\b) => {0}|{1}'
    - '.*?\b([0-9a-z]*[a-z]+)-?(\d+)(?=[^\d]|\b) => {0}|{1}'

  # 아래 특수 규칙들은 범용 규칙보다 우선하며, 복잡한 예외 케이스를 정규식으로 직접 처리합니다.
  # Censored 전용 특수 규칙
  censored_special_rules:
    # 3DSVR (예: [VCB] 13dsvr-039.mkv -> 3DSVR-039)
    - '.*?(3dsvr)[-_]?(\d+)(?=[^\d]|\b) => {0}|{1}'

    # 741M...-G... (예: 741m683-g02.mp4 -> 741M683-G02)
    - '.*?(?<![a-z0-9])(741[a-z]\d{3})[-_]?(g\d{2,})(?=[^\d]|\b) => {0}|{1}'

    # T28/T38 (예: [Subs] 1t28-635.mkv -> T28-635)
    - '.*?(?<![a-z])(t)[-_]?(28|38)[-_]?(\d+)(?=[^\d]|\b) => {0}{1}|{2}'

    # ID (예: 55id16045 -> 16ID-045)
    - '.*?(\d{2})?(id)[-_]?([1-9]\d|\d[1-9])(\d{3})(?=[^\d]|\b) => {2}{1}|{3}'

    # CPZ...-H... (예: [MyDir] 1cpz69h004 -> CPZ69-H004)
    - '.*?(?<![a-z])(cpz\d{2})[-_]?([a-z]\d+)(?=[^\d]|\b) => {0}|{1}'

    # GAREA (예: G-AREA-123 -> GAREA-123)
    - '.*?(?<![a-z])(g)[-_](area)[-_]?(\d+)(?=[^\d]|\b) => {0}{1}|{2}'

    # SCUTE (예: S-CUTE-1234 -> SCUTE-1234)
    - '.*?(?<![a-z])(s)[-_](cute)[-_]?(\d+)(?=[^\d]|\b) => {0}{1}|{2}'

    # MBRXX (예: MBR-AA-123 -> MBRAA-123)
    - '.*?(?<![a-z])(mar|mbr|mmr)[-_]([a-z]{2})[-_]?(\d+)(?=[^\d]|\b) => {0}{1}|{2}'

    # TOKYO (예: TOKYO247-123 -> TOKYO-123)
    - '.*?(?<![a-z])(tokyo)247[-_]?(\d+)(?=[^\d]|\b) => {0}|{1}'

    # 레이블 앞 3자리 숫자 유지
    - '.*?(\d{3})(ap|good|san|ten)[-_]?(\d+)(?=[^\d]|\b) => {0}{1}|{2}'

    # 레이블 앞 2자리 숫자 유지
    - '.*?(\d{2})(ap|id|ntrd|san|sora|sw|ten)[-_]?(\d{3,4})(?=[^\d]|\b) => {0}{1}|{2}'

  # 3. Uncensored 전용 특수 규칙
  uncensored_special_rules:
    # 1pondo
    - '.*?(?<![0-9])(1pon|1pondo)[-_\s]?(\d{6})[-_](\d{2,3})(?=[^\d]|\b).*? => 1pon|{1}_{2}'
    - '.*?(?<![0-9])(\d{6})[-_](\d{2,3})[-_\s]?(1pon|1pondo)\b.*? => 1pon|{0}_{1}'

    # 10musume
    - '.*?(?<![0-9])(10mu|10musume)[-_\s]?(\d{6})[-_](\d{2,3})(?=[^\d]|\b).*? => 10mu|{1}_{2}'
    - '.*?(?<![0-9])(\d{6})[-_](\d{2,3})[-_\s]?(10mu|10musume)\b.*? => 10mu|{0}_{1}'

    # Carib
    - '.*?(?<![a-z])carib(bean)?(com)?[-_\s]?(\d{6})[-_]?(\d{2,3})(?=[^\d]|\b).*? => carib|{2}-{3}'
    - '.*?(?<![0-9])(\d{6})[-_](\d{2,3})[-_\s]?carib(bean)?(com)?\b.*? => carib|{0}-{1}'

    # FC2
    - '.*?(?<![a-z])(fc2)[-_\s]?(ppv)?[-_\s]?(\d{5,7})(?=[^\d]|\b).*? => {0}|{2}'

    # HEYZO
    - '.*?(?<![a-z])(heyzo)[-_\s]?(\d{4})(?=[^\d]|\b).*? => {0}|{1}'

    ### 기타 레이블 규칙 ###
    # C0930
    - '.*?(?<![a-z])(c0930)[-_]([a-z]+\d+)(?=[^\d]|\b).*? => {0}|{1}'

    # 이미 처리된 파일
    - '^([a-z0-9]+)-((?:\d{6}[-_]\d{2,3})|(?:[a-z]*\d+))(?=[^\d]|\b).*? => {0}|{1}'

    # 123456-012-LABEL
    - '.*?(?<![0-9])(\d{6})[-_](\d{2,3})[-_\s]?([a-z]+)\b.*? => {2}|{0}-{1}'

    ### Uncensored용 우선 범용 규칙 ###
    - '.*?\b([0-9a-z]+)-(\d+)(?=[^\d]|\b) => {0}|{1}'


# [고급] 설정은 선택사항이며 옵션 세부설정 또는 특수기능을 위한 부분입니다.
# 설정이 없으면 기본값을 따릅니다.

# -------------------------------------------------------------------
# [고급] ffprobe를 이용한 파일명 포맷팅
# -------------------------------------------------------------------
fp_filename_with_ffprobe:
  # 기능 활성화 여부입니다.
  # true로 설정하고, 각 모듈(Censored/Uncensored)의 UI에서 
  # "파일명에 미디어 정보 포함" 체크박스를 켜야 최종적으로 활성화됩니다.
  enable: true

  # ffprobe 실행 파일의 절대 경로입니다.
  ffprobe_path: /usr/bin/ffprobe

  # --- 분할 파일 세트의 파일명 생성을 위한 허용 오차 ---
  # 분할 파일 세트로 식별된 파일들의 미디어 정보를 비교하여,
  # 아래 허용 오차 내에 있으면 '첫 번째 파일(cd1)'의 값을 대표로 사용하여
  # 모든 파트의 파일명을 동일하게 만듭니다.
  # 허용 오차를 벗어나는 정보는 파일명에서 제외됩니다.
  tolerance:
    # 오디오 비트레이트 허용 오차 (단위: kbps)
    audio_bitrate: 5
    # 프레임레이트(fps) 허용 오차
    fps: 0.01

  # --- 표준 프레임레이트 값 ---
  # ffprobe로 추출된 fps 값이 아래 목록의 값과 허용 오차 내에 있을 경우,
  # 해당 표준 값으로 보정되어 파일명에 사용됩니다. (예: 59.941 -> 59.94)
  standard_fps_values: [23.976, 24, 25, 29.97, 30, 59.94, 60]

    # --- 해상도 표준화 규칙 ---
  # height 값을 기준으로 해상도 태그를 결정합니다. 위에서부터 순서대로 검사합니다.
  resolution_tiers:
    - { min_height: 4000, max_height: 6000, tag: "8K" }
    - { min_height: 2880, max_height: 4000, tag: "6K" }
    - { min_height: 1600, max_height: 2880, tag: "4K" }
    - { min_height: 1200, max_height: 1600, tag: "3K" }
    - { min_height: 900,  max_height: 1200, tag: "FHD" }
    - { min_height: 600,  max_height: 900,  tag: "HD" }
    - { min_height: 0,    max_height: 600,  tag: "SD" }

  # --- 미디어 정보 템플릿 ---
  # 파일명에 추가될 미디어 정보 부분의 형식을 정의합니다.
  # {{...}} 구문: 덩어리(chunk). 중괄호 안의 모든 변수가 유효할 때만 덩어리 전체가 출력됩니다.
  #              예를 들어, {a_bitrate} 값이 없으면 {{-{a_bitrate}kbps}} 전체가 생략됩니다.
  #
  # 사용 가능한 변수:
  # {res_tag}, {width}, {height}, {v_codec}, {a_codec}, {a_bitrate}, {fps}, {tag_title}
  media_info_template: "[[{res_tag}]][[.{v_codec}]][[.{fps}fps]][[.{a_codec}]][[-{a_bitrate}kbps]][[.{tag_title}]]"

  # true로 설정하면, 아래 두 패턴을 사용하여 이미 처리된 파일명을 동적으로 수정합니다.
  enable_reprocessing: false

  # 이미 처리된 형식(미디어 정보 포함) 파일명을 식별하여 재처리를 건너뛰기 위한 정규식입니다.
  reprocess_skip_pattern: '\[(SD|HD|FHD|3K|4K|6K|8K)\.(H264|H265|HEVC|AV1|VP9|AVI|MPEG)'

  # 이미 처리된 형식(미디어 정보 없는) 파일명에 미디어 정보를 동적으로 삽입하기 위한 정규식입니다.
  # 그룹1: 품번, 그룹2: ' [', 그룹3: '원본정보...]'
  reprocess_insert_pattern: '^([a-zA-Z0-9]+-[a-zA-Z0-9-_]+)(\s\[)(.*\](?:cd\d+)?)$'


# -------------------------------------------------------------------
# [고급] 기타 설정
# -------------------------------------------------------------------
misc_settings:
  # --- 중복 파일 판단 기준 ---
  # 사용 가능한 옵션:
  #   - "strict": 파일명과 파일 크기가 모두 동일해야 중복으로 처리합니다. (가장 엄격)
  #   - "flexible": 파일명이 같거나, 또는 파일 크기가 같으면 중복으로 처리합니다. (강력한 중복 제거, 기본값)
  #   - "filename_only": 파일명이 동일한 경우 중복으로 처리합니다(파일 크기 체크 X).
  duplicate_check_method: flexible

  # 이미 파일처리(원본파일명 보존)된 형식인지 확인용 패턴.
  # 이 패턴과 일치하는 파일은 파일명 변경을 건너뜁니다.
  already_processed_pattern: '^[a-zA-Z0-9]+-[a-zA-Z0-9-_]+(\s\[.*\](?:cd\d+)?)$'

  # 숫자가 앞에 오는 레이블의 경우 {label_1}은 기본적으로 숫자를 무시합니다.
  # 숫자를 허용하고 '09' 폴더에 넣을 레이블을 지정해줍니다.
  allowed_numeric_labels: '^(741|1pon|10mu).*?'

  # PLEX MATE 스캔('On'일 때) 세부설정
  # True: 메타 매칭 결과가 없어도 스캔
  # False: 메타 매칭 결과가 없으면 스캔 생략
  scan_with_no_meta: True


# -------------------------------------------------------------------
# [고급] 특정 레이블을 지정된 경로로 이동
# -------------------------------------------------------------------
# 메타 검색 성공 시, 파일의 레이블이 아래 규칙과 일치하면
# '메타매칭시이동폴더' 대신 여기에 지정된 '경로'로 파일을 이동시킵니다.
# '폴더포맷'은 지정하지 않으면 기본 설정을 따릅니다.
# 레이블과 파일명 패턴은 정규표현식을 사용하고, 동시에 사용할 수 있습니다.
# 모듈: censored / uncensored / all(생략시 디폴트)
# ex)
# meta_custom_path:
#   - 이름: Decensored
#     모듈: censored
#     경로: "/mnt/content/xv/jap/cen/decen"
#     파일명패턴: |
#       (
#         (decen|uncen)|some-pattern
#         other-pattern
#       )
#   - 이름: Maniac
#     모듈: censored
#     경로: "/mnt/content/jav/cen/maniac"
#     레이블: |
#       13sw 59ten 143ten 741h057
#       abba abd abnomal acz aczd


# -------------------------------------------------------------------
# [고급] 자막영상 관리 경로로 이동
# -------------------------------------------------------------------
# 기본 라이브러리 외 경로에 따로 자막 영상을 관리하는 경우 이용할 수 있는 기능입니다.
# 이동 라이브러리와 매칭되는 폴더구조에서 해당 품번에 자막파일이 있을 경우 그 폴더로 이동합니다.
# 파일명 내에 내장자막키워드가 포함된 경우에도 자막관리 경로로 이동합니다
# subbed_path:
#   처리활성화: False
#   자막파일확장자: ass ssa idx sub sup smi srt ttml vtt
#   내장자막키워드: 자막 korsub
#   규칙:
#     - 이름: Censored
#       모듈: censored
#       경로: "/mnt/content/jav/cen/subbed"
#     - 이름: Uncensored
#       모듈: uncensored
#       경로: "/mnt/content/jav/uncen/subbed"
